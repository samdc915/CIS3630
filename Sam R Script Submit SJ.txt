Linear Regression
> names(LC2013)
 [1] "LoanAmount"    "InterestRate"  "AnnuaLincome"  "DTI"          
 [5] "YearsWorking"  "HomeOwnership" "Verification"  "LoanStatus"   
 [9] "Purpose"       "State"         "Term"          "SubGrade"    

did not cut down observations

LC2013<-read.csv(file.choose(),header=T, na.strings="?")
names(LC2013)
attach(LC2013)
dim(LC2013)
summary(LC2013)

par(mfrow=c(1,2)) 

plot(SubGrade , InterestRate , col ="red", varwidth =T, xlab=" Annual Income ", ylab =" Interest Rate ", main="Annual Income vs Interest Rate")

plot(InterestRate, SubGrade, col ="blue", varwidth =T, xlab=" Interest Rate ", ylab =" Annual Income ", main="Interest Rate vs Annual Income")

plot(AnnuaLincome , InterestRate , col ="red", varwidth =T, xlab=" SubGrade ", ylab =" Interest Rate ", main="Annual Income vs Interest Rate")

plot(InterestRate, AnnuaLincome, col ="blue", varwidth =T, xlab=" Interest Rate ", ylab =" SubGrade ", main="Interest Rate vs Annual Income")

Appropriate Training and Testing Data:
positions <- sample(nrow(LC2013), size = floor((nrow(LC2013)/4) * 3))
training <- LC2013[positions, ]
testing <- LC2013[-positions, ]
dim(testing)
dim(training)


M1=lm(InterestRate~.,data= training)

summary(M1)

plot(M1)

M2=lm(InterestRate~LoanAmount+AnnuaLincome+DTI+YearsWorking+HomeOwnership+Verification+Purpose,data= training)
summary(M2)
plot(M2)

SCALING?!?

We first normalize the two quantitative input variables balance and income so that they would be on a comparable scale. The scale() function standardizes the quantitative variables.

standardized.LoanAmount=scale(LoanAmount) 
standardized.AnnuaLincome=scale(AnnuaLincome)
standardized.DTI=scale(DTI)
standardized.InterestRate=scale(InterestRate)

contrasts(HomeOwnership)
contrasts(Verification)
contrasts(YearsWorking)
contrasts(Purpose)
contrasts(State)

M3=lm(standardized.InterestRate~standardized.LoanAmount+standardized.AnnuaLincome+standardized.DTI,data= training)
summary(M3)
plot(M3)


M3=lm(standardized.InterestRate~standardized.LoanAmount+standardized.AnnuaLincome+standardized.DTI+YearsWorking+HomeOwnership+Verification+Purpose,data= training)
summary(M2)
plot(M2)

lm.fit=lm(InterestRate~., data=LC2013Cluster)
summary(lm.fit)
plot(lm.fit)

==
Stepwise
M4=lm(InterestRate~LoanAmount,data= training)
summary(M4)
plot(M4)

M5=lm(InterestRate~AnnuaLincome,data= training)
summary(M5)
plot(M5)

M6=lm(InterestRate~DTI,data= training)
summary(M6)
plot(M6)

M7=lm(InterestRate~YearsWorking,data= training)
summary(M7)
plot(M7)

M8=lm(InterestRate~HomeOwnership,data= training)
summary(M8)
plot(M8)

M9=lm(InterestRate~Verification+Purpose,data= training)
summary(M9)
plot(M9)

M10=lm(InterestRate~Purpose,data= training)
summary(M10)
plot(M10)

M11=lm(InterestRate~LoanAmount+AnnuaLincome+DTI+YearsWorking+HomeOwnership+Verification+Purpose+State+Term, data= training)
summary(M11)
plot(M11)

pairs(training)

==============
Clustering
> names(LC2013Cluster)
[1] "LoanAmount"   "InterestRate" "AnnuaLincome" "DTI"          "SubGrade"   

LC2013Cluster<-read.csv(file.choose(),header=T, na.strings="?")
names(LC2013Cluster)
attach(LC2013Cluster)
dim(LC2013Cluster)
summary(LC2013Cluster)
sum(is.na(LC2013Cluster))
LC2013Cluster1=na.omit(LC2013Cluster)

SET Training SET!!
Appropriate Training and Testing Data:
positions4 <- sample(nrow(LC2013Cluster), size = floor((nrow(LC2013Cluster)/100) * 3))
LC2013Cluster.training4 <- LC2013Cluster[positions4, ]
LC2013Cluster.testing4 <- LC2013Cluster[-positions4, ]
dim(LC2013Cluster.testing4)
dim(LC2013Cluster.training4)

set.seed(1) 
km.out1 =kmeans (LC2013Cluster.data,3, nstart =1)

km.out1 
km.out1$cluster 
km.out1$betweenss 
km.out1$withinss 
km.out1$tot.withinss 
km.out1$totss

plot(LC2013Cluster.training4, col=(km.out1$cluster+1), pch=20, cex=2) <---- mistake with data, should be LC2013Cluster.data
table(km.out1$cluster,LC2013Cluster.SubGrade.labs)


set.seed(11) 
km.out2 =kmeans (LC2013Cluster.data,7, nstart =1) 
km.out2$betweenss 
km.out2$withinss 
km.out2$tot.withinss 
km.out2$totss 
plot(LC2013Cluster.data, col=(km.out2$cluster+1), pch=20, cex=2) 
table(km.out2$cluster,LC2013Cluster.SubGrade.labs)

set.seed(1) 
km.out3 =kmeans (LC2013Cluster.data,4, nstart =20) 
km.out3$betweenss 
km.out3$withinss 
km.out3$tot.withinss 
km.out3$totss 
plot(LC2013Cluster.data, col=(km.out3$cluster+1), pch=20, cex=2) 
table(km.out3$cluster,LC2013Cluster.SubGrade.labs)

set.seed(22) 
km.out4 =kmeans (LC2013Cluster.data,5, nstart =20) 
km.out4$betweenss 
km.out4$withinss 
km.out4$tot.withinss 
km.out4$totss 
plot(LC2013Cluster.data, col=(km.out4$cluster+1), pch=20, cex=2) 
table(km.out4$cluster,LC2013Cluster.SubGrade.labs)

km.out5 =kmeans (LC2013Cluster.data,7, nstart =20) 
km.out5$betweenss 
km.out5$withinss 
km.out5$tot.withinss 
km.out5$totss 
plot(LC2013Cluster.data, col=(km.out5$cluster+1), pch=20, cex=2) 
table(km.out5$cluster,LC2013Cluster.SubGrade.labs)

wss = km.out5$totss 
for (i in 2:10) wss[i] = sum(kmeans(LC2013Cluster.data,centers=i)$withinss) 
plot(1:10, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")

Set Euclidean distance:
LC2013Cluster1.dist=dist(LC2013Cluster.data)

hc1=hclust(LC2013Cluster1.dist, method="complete") 
hc2=hclust(LC2013Cluster1.dist, method="average") 
hc3=hclust(LC2013Cluster1.dist, method="single")


Plot 3!
par(mfrow=c(1,3))
plot(hc1, labels=LC2013Cluster.SubGrade.labs, main="Complete Linkage", xlab="", sub="", ylab="") 
plot(hc2, labels=LC2013Cluster.SubGrade.labs, main="Average Linkage", xlab="", sub="",ylab="") 
plot(hc3, labels=LC2013Cluster.SubGrade.labs, main="Single Linkage", xlab="", sub="",ylab="")

